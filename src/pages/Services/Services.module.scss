.services {
  padding-top: 80px;
  background: var(--bg-dark);
  min-height: 100vh;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 50% 50%, rgba(255,255,255,0.03) 0%, transparent 50%);
    pointer-events: none;
  }
}

.hero {
  text-align: center;
  padding: 6rem 2rem;
  background: linear-gradient(135deg, var(--primary-dark), var(--primary));
  color: white;
  margin-bottom: 3rem;
  position: relative;
  overflow: hidden;
  isolation: isolate;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      linear-gradient(45deg, rgba(255,255,255,0.1) 25%, transparent 25%),
      linear-gradient(-45deg, rgba(255,255,255,0.1) 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, rgba(255,255,255,0.1) 75%),
      linear-gradient(-45deg, transparent 75%, rgba(255,255,255,0.1) 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
    opacity: 0.1;
    z-index: -1;
    animation: patternMove 20s linear infinite;
  }

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 50% 50%, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: glowPulse 4s ease-in-out infinite;
  }

  h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin-bottom: 1rem;
    position: relative;
    text-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  p {
    font-size: clamp(1.1rem, 2vw, 1.25rem);
    opacity: 0.9;
    max-width: 600px;
    margin: 0 auto;
    position: relative;
  }
}

.servicesGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  perspective: 1000px;
}

.serviceCard {
  border-radius: var(--border-radius);
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.03),
    0 0 0 1px rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(15px);
  transform-style: preserve-3d;
  background: rgba(255, 255, 255, 0.01);

  &:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 
      0 8px 30px rgba(0, 0, 0, 0.05),
      0 0 0 1px rgba(255, 255, 255, 0.08);

    .iconWrapper {
      transform: translateZ(20px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .learnMore i {
      transform: translateX(5px);
    }
  }
}

.cardContent {
  padding: 2.5rem;
  color: white;
  text-decoration: none;
  background: transparent;
  position: relative;
  z-index: 1;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%), 
                rgba(255,255,255,0.1) 0%, 
                transparent 50%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: -1;
  }

  &:hover::before {
    opacity: 1;
  }

  h2 {
    font-size: 1.75rem;
    margin-bottom: 1rem;
    font-weight: 400;
    letter-spacing: 0.5px;
    color: rgba(255, 255, 255, 0.9);
    transition: color 0.3s ease;
  }

  p {
    opacity: 0.75;
    margin-bottom: 1.5rem;
    line-height: 1.7;
    font-size: 1.1rem;
    transition: opacity 0.3s ease;
  }
}

.iconWrapper {
  width: 70px;
  height: 70px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.75rem;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.08);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;

  &::after {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  &:hover::after {
    opacity: 1;
  }

  i {
    font-size: 1.75rem;
    color: rgba(255, 255, 255, 0.85);
    transition: all 0.3s ease;
  }
}

.features {
  margin: 1.75rem 0;
  
  li {
    display: flex;
    align-items: center;
    gap: 0.875rem;
    margin-bottom: 1rem;
    color: rgba(255, 255, 255, 0.75);
    font-size: 1.05rem;
    transition: all 0.3s ease;
    transform-origin: left;

    &:hover {
      color: rgba(255, 255, 255, 0.95);
      transform: translateX(5px);
    }

    i {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.9rem;
      transition: all 0.3s ease;
    }
  }
}

.learnMore {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  color: rgba(255, 255, 255, 0.8);
  font-weight: 400;
  margin-top: 2rem;
  padding-top: 1.25rem;
  border-top: 1px solid rgba(255, 255, 255, 0.06);
  font-size: 1.1rem;
  transition: all 0.3s ease;

  &:hover {
    color: rgba(255, 255, 255, 1);
    gap: 1rem;
  }

  i {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 0.9rem;
  }
}

@keyframes patternMove {
  0% {
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }
  100% {
    background-position: 20px 20px, 20px 30px, 30px 10px, 10px 20px;
  }
}

@keyframes glowPulse {
  0%, 100% {
    opacity: 0.1;
  }
  50% {
    opacity: 0.2;
  }
}

.cta {
  background: var(--primary);
  color: white;
  padding: 6rem 2rem;
  margin-top: 4rem;
  text-align: center;
}

.container {
  max-width: 800px;
  margin: 0 auto;

  h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  p {
    opacity: 0.9;
    margin-bottom: 2rem;
  }
}

.ctaButtons {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.primaryButton, .secondaryButton {
  padding: 1rem 2rem;
  border-radius: 4px;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s ease;
}

.primaryButton {
  background: var(--accent);
  color: var(--primary);

  &:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
}

.secondaryButton {
  background: transparent;
  border: 2px solid white;
  color: white;

  &:hover {
    background: rgba(255, 255, 255, 0.1);
  }
}

@media (max-width: 768px) {
  .servicesGrid {
    grid-template-columns: 1fr;
  }

  .ctaButtons {
    flex-direction: column;
  }

  .hero {
    padding: 4rem 1rem;
  }
} 